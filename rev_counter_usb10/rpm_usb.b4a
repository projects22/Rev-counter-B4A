Build1=Default,anywheresoftware.b4a.samples.bluetooth
File1=button-gry.png
File2=layout1.bal
File3=meter2.png
File4=point2.png
FileGroup1=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
Group=Default Group
Library1=core
Library2=byteconverter
Library3=felusbserial
Library4=usb
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="5" android:targetSdkVersion="26"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.LightTheme)~\n~'End of default text.~\n~
NumberOfFiles=4
NumberOfLibraries=4
NumberOfModules=0
Version=10.2
@EndOfDesignText@
#Region Module Attributes
	#FullScreen: False
	#IncludeTitle: True
	#ApplicationLabel: rpm_usb
	#VersionCode: 1
	#VersionName: 
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
	#BridgeLogger: true
#End Region

Sub Process_Globals
	Private usbserial As felUsbSerial
	Private manager As UsbManager
	Private bmppointer As Bitmap
	
End Sub

Sub Globals
	Private cvsGraph As Canvas	
	Private pnl1 As Panel		
	Private img1 As ImageView
	Private rect1 As Rect
	Private btnTest As Button
	Private btnRPM As Button
	Private text1 As EditText
	Private Label1 As Label
	Private bc As ByteConverter
	Private reply As String
	
	Private usbserial As felUsbSerial
	Private manager As UsbManager
	Private btnConnect As Button
	Private a, b As Int
	Private conn=False, run=False As Boolean
	Private Label2 As Label
	Private Label3 As Label
End Sub


Sub Activity_Create(FirstTime As Boolean)
	manager.Initialize
	bmppointer.Initialize(File.DirAssets,"point2.png")
	Activity.LoadLayout("layout1")
	
	cvsGraph.Initialize(pnl1)	' initialize the Canvas for the panel
	pnl1.Left=50%x-150dip
	img1.Left=50%x-150dip
	rect1.Initialize(0, 0, 300dip, 300dip)
	cvsGraph.DrawBitmap(bmppointer, Null, rect1)
	cvsGraph.DrawText("3000",150,245dip,Typeface.DEFAULT,36,Colors.Green,"CENTER")
	pnl1.Invalidate
End Sub

Sub btnConnect_Click
	If manager.GetDevices.Length = 0 Then
		Label2.Text = "No USB devices"
	Else
		Dim device As UsbDevice = manager.GetDevices(0) 'assuming that there is exactly one device
		If manager.HasPermission(device) = False Then
			Label2.Text = "Click Connect"
			manager.RequestPermission(device)
		Else
			'usbserial.Initialize2("serial", device, -1,"CH34xSerialDevice")
			'usbserial.Initialize2("serial", device, -1,"CP2102SerialDevice")
			usbserial.Initialize("serial", device, -1)
			usbserial.BaudRate = 38400	'38400
			usbserial.DataBits = usbserial.DATA_BITS_8
			usbserial.StartReading
			Label2.Text = "Connected"
			conn=True
		End If
	End If
End Sub

Sub convert
	Dim a, b As Int
	Dim angle As Float
	Dim rpmD As Int
	Dim aa(), bb(), si As Byte
	
	If reply.Length > 16 Then
		si=reply.IndexOf("41")
		
		aa=bc.HexToBytes(reply.SubString2(si+6,si+8))	'12,14
		bb=bc.HexToBytes(reply.SubString2(si+9,si+11))	'15,17
		a=Bit.And(0xFF,aa(0))		'convert byte to unsigned byte
		b=Bit.And(0xFF,bb(0))
		angle = ((a * 256 + b) / 100) - 120
		rpmD = (a * 256 + b) / 4
		Label1.Text=reply

		cvsGraph.DrawRect(rect1, Colors.Transparent, True, 3dip)		'refresh screen
		cvsGraph.DrawBitmapRotated(bmppointer, Null, rect1, angle)
		cvsGraph.DrawText(rpmD,150,245,Typeface.DEFAULT,36,Colors.Green,"CENTER")
		pnl1.Invalidate
	End If
	reply = ""
	Sleep(100)
End Sub

Private Sub serial_DataAvailable (Buffer() As Byte)
	reply = reply & BytesToString(Buffer, 0, Buffer.Length, "UTF8")
	If reply.Contains(">") Then
		If run Then
			convert
			Dim pid As String = "010C" & Chr(13) & Chr(10)
			usbserial.Write(pid.GetBytes("UTF8"))	'Chr(13) & Chr(10)
		Else
			Label3.Text = reply
			reply = ""
		End If
	End If

End Sub

Sub btnTest_Click
	If conn Then
		run=False
		Dim pid As String = "ATZ" & Chr(13) & Chr(10)
		usbserial.Write(pid.GetBytes("UTF8"))	'Chr(13) & Chr(10) 
	End If
End Sub

Sub btnRPM_Click
	Dim pid As String = "010C" & Chr(13) & Chr(10)
	If conn Then
		run=True
		usbserial.Write(pid.GetBytes("UTF8"))	'Chr(13) & Chr(10)
	End If
End Sub

Sub Activity_Resume
	btnConnect_Click
	If conn Then
		'btnTest_Click
		btnRPM_Click
	End If
End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub



